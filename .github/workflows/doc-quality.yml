# TESTGUARD_APPROVED: Isolated non-blocking workflow per consultation be92c7f5-0d20-47cf-b626-5f1e06c613be
name: Documentation Quality

# This workflow is INFORMATIONAL ONLY and does not block merges
# It helps identify documentation issues without creating false CI failures

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [main]
    paths:
      - '**.md'
      - 'docs/**'

# Required permissions for creating issues
permissions:
  contents: read
  issues: write

jobs:
  check-links:
    runs-on: ubuntu-latest
    # This job is informational - failures don't block anything
    continue-on-error: true
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Check Markdown Links
        id: link-check
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'no'
          use-verbose-mode: 'yes'
          folder-path: '.'
          file-extension: '.md'
          check-modified-files-only: 'no'
          max-depth: 10
          config-file: '.github/markdown-link-check-config.json'
          # Note: retry settings are in the config file, not as action inputs
          
      - name: Create Issue for Broken Links
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'üìö Documentation: Broken Links Detected';
            const body = `
            ## Broken Links Found in Documentation
            
            The automated link checker found broken links in the documentation.
            This is informational only and does not block development.
            
            **Workflow Run:** [View Details](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
            
            Please review and fix broken links when convenient.
            
            ---
            *This is an automated issue from the Documentation Quality workflow*
            `;
            
            try {
              // Check if issue already exists
              const issues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                labels: 'documentation,automated'
              });
              
              const existingIssue = issues.data.find(issue => issue.title === title);
              
              if (!existingIssue) {
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: title,
                  body: body,
                  labels: ['documentation', 'automated']
                });
                console.log('Created new issue for broken links');
              } else {
                console.log('Issue already exists, skipping creation');
              }
            } catch (error) {
              console.log('Could not create issue (likely permissions issue in fork/PR context)');
              console.log('Error:', error.message);
              // Don't fail the workflow just because we can't create an issue
            }
      
      - name: Update Status Badge Data
        if: always()
        run: |
          # This would update a JSON file that a README badge could read
          # For now, just log the status
          if [ "${{ steps.link-check.outcome }}" == "success" ]; then
            echo "‚úÖ All documentation links valid"
          else
            echo "‚ö†Ô∏è  Some documentation links need attention"
          fi