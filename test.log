
> build@1.0.0 test
> vitest run


 RUN  v3.2.4 /Volumes/HestAI-Projects/eav-orchestrator/build

 ✓ tests/repomix-ignore.test.ts (4 tests) 8ms
 ✓ src/lib/supabase.test.ts (18 tests | 3 skipped) 7ms
 ✓ tests/unit/resilience/circuitBreaker.test.ts (22 tests) 10ms
 ✓ tests/unit/resilience/retryWithBackoff.test.ts (17 tests) 11ms
 ✓ tests/unit/ordering/fractionalIndex.test.ts (29 tests) 13ms
stderr | tests/unit/collaboration/custom-supabase-provider.test.ts > CustomSupabaseProvider Integration > should connect within performance targets
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:55:20
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20

stderr | tests/unit/collaboration/custom-supabase-provider.test.ts > CustomSupabaseProvider Integration > should connect within performance targets
CustomSupabaseProvider connection failed: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:55:20
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20

 ✓ tests/unit/database/scriptComponentManager.test.ts (12 tests) 7ms
stderr | tests/unit/collaboration/custom-supabase-provider.test.ts > CustomSupabaseProvider Integration > should support concurrent users without degradation
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Circuit Breaker Protection > should queue operations when circuit is open
Circuit breaker delete opened
Circuit breaker delete fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Circuit Breaker Protection > should process queued operations when circuit closes
Circuit breaker create opened
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stdout | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Circuit Breaker Protection > should process queued operations when circuit closes
Circuit breaker create closed, normal operation resumed

stderr | src/lib/collaboration/AuthenticatedProviderFactory.test.ts > AuthenticatedProviderFactory > create method > should throw error when provider creation fails
AuthenticatedProviderFactory: Failed to create provider: Error: Provider construction failed
    at fn.<anonymous> [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.test.ts:194:15[90m)[39m
    at new mockCall [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:96:15[90m)[39m
    at new spy [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:39[90m)[39m
    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:64:24[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.test.ts:198:7
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20

stderr | tests/unit/collaboration/custom-supabase-provider.test.ts > CustomSupabaseProvider Integration > should support concurrent users without degradation
CustomSupabaseProvider connection failed: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
CustomSupabaseProvider connection failed: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
CustomSupabaseProvider connection failed: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
CustomSupabaseProvider connection failed: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
CustomSupabaseProvider connection failed: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
CustomSupabaseProvider connection failed: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
CustomSupabaseProvider connection failed: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
CustomSupabaseProvider connection failed: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
CustomSupabaseProvider connection failed: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
CustomSupabaseProvider connection failed: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:28
    at Array.map (<anonymous>)
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:81:17
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

stderr | tests/unit/collaboration/custom-supabase-provider.test.ts > CustomSupabaseProvider Integration > should provide basic document state access
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:99:20
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20

stderr | tests/unit/collaboration/custom-supabase-provider.test.ts > CustomSupabaseProvider Integration > should provide basic document state access
CustomSupabaseProvider connection failed: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.connect [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:137:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/custom-supabase-provider.test.ts:99:20
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20

 ✓ src/lib/collaboration/AuthenticatedProviderFactory.test.ts (7 tests) 7ms
 ❯ tests/unit/collaboration/custom-supabase-provider.test.ts (4 tests | 3 failed) 57ms
   ✓ CustomSupabaseProvider Integration > should successfully import CustomSupabaseProvider 45ms
   × CustomSupabaseProvider Integration > should connect within performance targets 4ms
     → this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
   × CustomSupabaseProvider Integration > should support concurrent users without degradation 6ms
     → expected false to be true // Object.is equality
   × CustomSupabaseProvider Integration > should provide basic document state access 1ms
     → this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
stdout | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Authentication Context Flow > should initialize CustomSupabaseProvider with authenticated user context
ScriptEditor: useEffect mount - provider exists: [33mfalse[39m initializing: [33mfalse[39m
ScriptEditor: Starting provider initialization
ScriptEditor: Initializing provider for document: test-document-456

stderr | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Authentication Context Flow > should initialize CustomSupabaseProvider with authenticated user context
AuthenticatedProviderFactory: Failed to create provider: Error: [vitest] No "getSupabaseClient" export is defined on the "../../lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:46:30[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at initializeProvider [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/components/editor/ScriptEditor.tsx:258:39[90m)[39m {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"../../lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Authentication Context Flow > should initialize CustomSupabaseProvider with authenticated user context
ScriptEditor: Failed to initialize collaboration provider: Error: Failed to create authenticated provider: [vitest] No "getSupabaseClient" export is defined on the "../../lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:86:13[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at initializeProvider [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/components/editor/ScriptEditor.tsx:258:39[90m)[39m

stdout | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Authentication Context Flow > should fallback to anonymous mode when authentication fails
ScriptEditor: useEffect mount - provider exists: [33mfalse[39m initializing: [33mfalse[39m
ScriptEditor: Starting provider initialization
ScriptEditor: Initializing provider for document: test-document-456

stderr | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Authentication Context Flow > should fallback to anonymous mode when authentication fails
AuthenticatedProviderFactory: Failed to create provider: Error: [vitest] No "getSupabaseClient" export is defined on the "../../lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:46:30[90m)[39m
    at initializeProvider [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/components/editor/ScriptEditor.tsx:258:39[90m)[39m {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"../../lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Authentication Context Flow > should fallback to anonymous mode when authentication fails
ScriptEditor: Failed to initialize collaboration provider: Error: Failed to create authenticated provider: [vitest] No "getSupabaseClient" export is defined on the "../../lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:86:13[90m)[39m
    at initializeProvider [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/components/editor/ScriptEditor.tsx:258:39[90m)[39m

stdout | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should clear previous auto-save timer when content changes rapidly
ScriptEditor: useEffect mount - provider exists: [33mfalse[39m initializing: [33mfalse[39m
ScriptEditor: Skipping initialization - missing config

stdout | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Authentication Context Flow > should pass project context to authenticated provider factory
ScriptEditor: useEffect mount - provider exists: [33mfalse[39m initializing: [33mfalse[39m
ScriptEditor: Starting provider initialization
ScriptEditor: Initializing provider for document: specific-document-012

stderr | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Authentication Context Flow > should pass project context to authenticated provider factory
AuthenticatedProviderFactory: Failed to create provider: Error: [vitest] No "getSupabaseClient" export is defined on the "../../lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:46:30[90m)[39m
    at initializeProvider [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/components/editor/ScriptEditor.tsx:258:39[90m)[39m {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"../../lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Authentication Context Flow > should pass project context to authenticated provider factory
ScriptEditor: Failed to initialize collaboration provider: Error: Failed to create authenticated provider: [vitest] No "getSupabaseClient" export is defined on the "../../lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:86:13[90m)[39m
    at initializeProvider [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/components/editor/ScriptEditor.tsx:258:39[90m)[39m

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should clear previous auto-save timer when content changes rapidly
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

 ❯ tests/unit/components/ScriptEditor.test.tsx (22 tests | 22 failed) 44ms
   × ScriptEditor > Component Initialization > should render ScriptEditor component successfully 11ms
     → default.configure is not a function
   × ScriptEditor > Component Initialization > should render TipTap editor with basic rich text features 2ms
     → default.configure is not a function
   × ScriptEditor > Component Initialization > should initialize with Y.js document binding 1ms
     → default.configure is not a function
   × ScriptEditor > Rich Text Features > should support bold text formatting 1ms
     → default.configure is not a function
   × ScriptEditor > Rich Text Features > should support italic text formatting 3ms
     → default.configure is not a function
   × ScriptEditor > Rich Text Features > should support bulleted lists 1ms
     → default.configure is not a function
   × ScriptEditor > Rich Text Features > should support heading levels 1ms
     → default.configure is not a function
   × ScriptEditor > Y.js Collaboration Integration > should bind to Y.js document for collaborative editing 1ms
     → default.configure is not a function
   × ScriptEditor > Y.js Collaboration Integration > should sync local changes to Y.js document 1ms
     → default.configure is not a function
   × ScriptEditor > Y.js Collaboration Integration > should display collaboration cursor from remote users 1ms
     → default.configure is not a function
   × ScriptEditor > Content Persistence > should auto-save content to Supabase via Y.js 1ms
     → default.configure is not a function
   × ScriptEditor > Content Persistence > should handle optimistic locking conflicts 1ms
     → default.configure is not a function
   × ScriptEditor > Content Persistence > should persist TipTap JSON to JSONB storage 1ms
     → default.configure is not a function
   × ScriptEditor > Component Structure Management > should support 3-18 components per script 1ms
     → default.configure is not a function
   × ScriptEditor > Component Structure Management > should allow reordering components with drag and drop 1ms
     → default.configure is not a function
   × ScriptEditor > Component Structure Management > should maintain 1:1 component-to-scene mapping 1ms
     → default.configure is not a function
   × ScriptEditor > Connection Status > should display connection status to collaboration server 1ms
     → default.configure is not a function
   × ScriptEditor > Connection Status > should show sync status with other users 1ms
     → default.configure is not a function
   × ScriptEditor > Connection Status > should display active user presence indicators 1ms
     → default.configure is not a function
   × ScriptEditor > Performance Requirements > should handle 10-20 concurrent users smoothly 6ms
     → default.configure is not a function
   × ScriptEditor > Performance Requirements > should maintain <200ms comment sync latency 1ms
     → default.configure is not a function
   × ScriptEditor > Performance Requirements > should update presence indicators <500ms 6ms
     → default.configure is not a function
stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create opened
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size
Circuit breaker create fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m,
  queued: [33mtrue[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should clear offline queue on demand
Circuit breaker delete opened
Circuit breaker delete fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m
}

stderr | tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Offline Queue Management > should clear offline queue on demand
Circuit breaker delete fallback triggered {
  success: [33mfalse[39m,
  error: [32m'Service temporarily unavailable. Operation queued for retry.'[39m
}

 ❯ tests/unit/database/scriptComponentManagerWithResilience.test.ts (17 tests | 2 failed) 159ms
   ✓ ResilientScriptComponentManager > Circuit Breaker Protection > should handle database failures gracefully 3ms
   × ResilientScriptComponentManager > Circuit Breaker Protection > should open circuit after threshold failures 5ms
     → expected 'query.is is not a function' to contain 'Service temporarily unavailable'
   × ResilientScriptComponentManager > Circuit Breaker Protection > should queue operations when circuit is open 2ms
     → expected undefined to be true // Object.is equality
   ✓ ResilientScriptComponentManager > Circuit Breaker Protection > should process queued operations when circuit closes 134ms
   ✓ ResilientScriptComponentManager > CRUD Operations > deleteComponent > should soft delete a component successfully 2ms
   ✓ ResilientScriptComponentManager > CRUD Operations > deleteComponent > should handle deletion of non-existent component 0ms
   ✓ ResilientScriptComponentManager > CRUD Operations > restoreComponent > should restore a soft-deleted component 0ms
   ✓ ResilientScriptComponentManager > CRUD Operations > getComponentsByScriptId > should fetch all components for a script 0ms
   ✓ ResilientScriptComponentManager > CRUD Operations > getComponentsByScriptId > should include deleted components when requested 0ms
   ✓ ResilientScriptComponentManager > CRUD Operations > getComponentById > should fetch a single component by ID 0ms
   ✓ ResilientScriptComponentManager > CRUD Operations > bulkDeleteComponents > should delete multiple components 0ms
   ✓ ResilientScriptComponentManager > CRUD Operations > updateComponentPositions > should update positions for reordering 0ms
   ✓ ResilientScriptComponentManager > Metrics and Monitoring > should track circuit breaker statistics 0ms
   ✓ ResilientScriptComponentManager > Metrics and Monitoring > should get optimistic locking metrics 0ms
   ✓ ResilientScriptComponentManager > Metrics and Monitoring > should reset all metrics 0ms
   ✓ ResilientScriptComponentManager > Offline Queue Management > should limit offline queue size 4ms
   ✓ ResilientScriptComponentManager > Offline Queue Management > should clear offline queue on demand 0ms
stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should clear previous auto-save timer when content changes rapidly
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stdout | tests/unit/components/ScriptComponentManagement.test.tsx > Script Component Management - V2 Requirements > Component Creation > should create a new component when Add Component button is clicked
ScriptEditor: useEffect mount - provider exists: [33mfalse[39m initializing: [33mfalse[39m
ScriptEditor: Skipping initialization - missing config

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should clear previous auto-save timer when content changes rapidly
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should clear previous auto-save timer when content changes rapidly
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

 ✓ tests/unit/types/editor.test.ts (16 tests) 3ms
 ✓ tests/unit/database/yjs-security.test.ts (13 tests) 4ms
 ✓ tests/config.test.ts (9 tests) 3ms
 ✓ tests/unit/collaboration/persistence.test.ts (13 tests) 6ms
 ✓ tests/unit/types/scriptComponent.test.ts (13 tests) 3ms
 ✓ tests/build-system.test.ts (8 tests) 2ms
 ✓ tests/unit/collaboration/encoding.test.ts (17 tests) 4ms
 ✓ tests/unit/collaboration/custom-supabase-provider-awareness.test.ts (8 tests) 4ms
stderr | tests/unit/collaboration/circuitBreaker.test.ts > Circuit Breaker Integration > Circuit Breaker State Management > should open circuit after threshold failures
Error persisting update after retries: Error: Network error
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/circuitBreaker.test.ts:72:57
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/unit/collaboration/circuitBreaker.test.ts > Circuit Breaker Integration > Circuit Breaker State Management > should open circuit after threshold failures
Error persisting update after retries: Error: Network error
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/circuitBreaker.test.ts:72:57
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should clear previous auto-save timer when content changes rapidly
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

 ✓ tests/unit/assets.test.ts (3 tests) 2ms
stderr | tests/unit/collaboration/circuitBreaker.test.ts > Circuit Breaker Integration > Circuit Breaker State Management > should open circuit after threshold failures
Error persisting update after retries: Error: Network error
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/circuitBreaker.test.ts:72:57
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/unit/collaboration/circuitBreaker.test.ts > Circuit Breaker Integration > Circuit Breaker State Management > should open circuit after threshold failures
Error persisting update after retries: Error: Network error
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/circuitBreaker.test.ts:72:57
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/unit/collaboration/circuitBreaker.test.ts > Circuit Breaker Integration > Circuit Breaker State Management > should open circuit after threshold failures
Error persisting update after retries: Error: Network error
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/circuitBreaker.test.ts:72:57
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/unit/collaboration/circuitBreaker.test.ts > Circuit Breaker Integration > Circuit Breaker State Management > should open circuit after threshold failures
Error persisting update after retries: Error: Network error
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/circuitBreaker.test.ts:72:57
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m
    at runTest [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m
    at runSuite [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8[90m)[39m

stderr | tests/unit/collaboration/circuitBreaker.test.ts > Circuit Breaker Integration > Circuit Breaker State Management > should queue updates when circuit is open
Circuit breaker blocked or failed persist operation: Error: Breaker is open
    at buildError [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:699:17[90m)[39m
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:486:21[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CustomSupabaseProvider.persistUpdate [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:282:39[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/circuitBreaker.test.ts:123:24
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m {
  code: [32m'EOPENBREAKER'[39m,
  [[32mSymbol(our-error)[39m]: [33mtrue[39m
}

stderr | tests/unit/collaboration/circuitBreaker.test.ts > Circuit Breaker Integration > Wrapped Operations > should wrap loadInitialState with circuit breaker
Error loading initial state: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CircuitBreaker.mockCall [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:96:15[90m)[39m
    at CircuitBreaker.fire [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at CustomSupabaseProvider.loadInitialState [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:263:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/circuitBreaker.test.ts:232:22
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11

stderr | tests/unit/collaboration/circuitBreaker.test.ts > Circuit Breaker Integration > Wrapped Operations > should wrap loadInitialState with circuit breaker
Circuit breaker blocked or failed loadInitialState: TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
    at CustomSupabaseProvider.loadInitialStateOperation [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:183:10[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:521:38
    at new Promise (<anonymous>)
    at CircuitBreaker.call [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:497:12[90m)[39m
    at CircuitBreaker.fire [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mopossum[24m/lib/circuit.js:415:22[90m)[39m
    at CircuitBreaker.mockCall [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/spy/dist/index.js:96:15[90m)[39m
    at CircuitBreaker.fire [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mtinyspy[24m/dist/index.js:47:103[90m)[39m
    at CustomSupabaseProvider.loadInitialState [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/custom-supabase-provider.ts:263:42[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/collaboration/circuitBreaker.test.ts:232:22
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11

 ❯ tests/unit/collaboration/circuitBreaker.test.ts (9 tests | 1 failed) 638ms
   ✓ Circuit Breaker Integration > Circuit Breaker Configuration > should initialize circuit breaker with correct thresholds 1ms
   ✓ Circuit Breaker Integration > Circuit Breaker State Management > should open circuit after threshold failures  630ms
   ✓ Circuit Breaker Integration > Circuit Breaker State Management > should queue updates when circuit is open 2ms
   ✓ Circuit Breaker Integration > Circuit Breaker State Management > should drain offline queue when circuit closes 1ms
   ✓ Circuit Breaker Integration > State Propagation > should propagate circuit breaker state changes 0ms
   ✓ Circuit Breaker Integration > State Propagation > should handle half-open state correctly 0ms
   × Circuit Breaker Integration > Wrapped Operations > should wrap loadInitialState with circuit breaker 1ms
     → this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
   ✓ Circuit Breaker Integration > Wrapped Operations > should wrap setupRealtimeSubscription with circuit breaker 0ms
   ✓ Circuit Breaker Integration > Wrapped Operations > should wrap persistUpdate with circuit breaker 0ms
stdout | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should clear auto-save timer on component unmount
ScriptEditor: useEffect mount - provider exists: [33mfalse[39m initializing: [33mfalse[39m
ScriptEditor: Skipping initialization - missing config

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should clear auto-save timer on component unmount
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

 ✓ tests/unit/collaboration/YjsSupabaseProvider.test.ts (12 tests) 730ms
stdout | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not create multiple timers for the same auto-save delay
ScriptEditor: useEffect mount - provider exists: [33mfalse[39m initializing: [33mfalse[39m
ScriptEditor: Skipping initialization - missing config

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not create multiple timers for the same auto-save delay
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not create multiple timers for the same auto-save delay
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not create multiple timers for the same auto-save delay
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not create multiple timers for the same auto-save delay
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not create multiple timers for the same auto-save delay
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not create multiple timers for the same auto-save delay
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not create multiple timers for the same auto-save delay
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not create multiple timers for the same auto-save delay
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not create multiple timers for the same auto-save delay
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not create multiple timers for the same auto-save delay
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stdout | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not leak memory when auto-save is disabled
ScriptEditor: useEffect mount - provider exists: [33mfalse[39m initializing: [33mfalse[39m
ScriptEditor: Skipping initialization - missing config

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not leak memory when auto-save is disabled
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not leak memory when auto-save is disabled
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not leak memory when auto-save is disabled
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not leak memory when auto-save is disabled
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

stderr | tests/unit/components/ScriptEditor.memory-leak.test.tsx > ScriptEditor Memory Leak Prevention > should not leak memory when auto-save is disabled
An update to ScriptEditor inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

 ✓ tests/unit/components/ScriptEditor.memory-leak.test.tsx (4 tests) 942ms
   ✓ ScriptEditor Memory Leak Prevention > should clear previous auto-save timer when content changes rapidly  629ms
 ❯ tests/unit/components/ScriptComponentManagement.test.tsx (7 tests | 7 failed) 1149ms
   × Script Component Management - V2 Requirements > Component Creation > should create a new component when Add Component button is clicked 1138ms
     → Unable to find an element by: [data-testid="component-comp-123"]

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"script-editor "[39m
      [33mdata-testid[39m=[32m"script-editor"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"toolbar border-b border-gray-200 p-2 flex gap-2"[39m
        [33mdata-testid[39m=[32m"editor-toolbar"[39m
      [36m>[39m
        [36m<button[39m
          [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
          [33mdata-testid[39m=[32m"bold-button"[39m
          [33mtype[39m=[32m"button"[39m
        [36m>[39m
          [0mB[0m
        [36m</button>[39m
        [36m<button[39m
          [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
          [33mdata-testid[39m=[32m"italic-button"[39m
          [33mtype[39m=[32m"button"[39m
        [36m>[39m
          [0mI[0m
        [36m</button>[39m
        [36m<button[39m
          [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
          [33mdata-testid[39m=[32m"bullet-list-button"[39m
          [33mtype[39m=[32m"button"[39m
        [36m>[39m
          [0m•[0m
        [36m</button>[39m
        [36m<select[39m
          [33mclass[39m=[32m"px-2 py-1 border rounded"[39m
          [33mdata-testid[39m=[32m"heading-select"[39m
        [36m>[39m
          [36m<option[39m
            [33mvalue[39m=[32m"0"[39m
          [36m>[39m
            [0mParagraph[0m
          [36m</option>[39m
          [36m<option[39m
            [33mvalue[39m=[32m"1"[39m
          [36m>[39m
            [0mHeading 1[0m
          [36m</option>[39m
          [36m<option[39m
            [33mvalue[39m=[32m"2"[39m
          [36m>[39m
            [0mHeading 2[0m
          [36m</option>[39m
          [36m<option[39m
            [33mvalue[39m=[32m"3"[39m
          [36m>[39m
            [0mHeading 3[0m
          [36m</option>[39m
        [36m</select>[39m
      [36m</div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"collaboration-status p-2 bg-gray-50 text-sm"[39m
        [33mdata-testid[39m=[32m"collaboration-status"[39m
      [36m>[39m
        [36m<span[39m
          [33mclass[39m=[32m"status-indicator disconnected"[39m
          [33mdata-testid[39m=[32m"connection-status"[39m
        [36m>[39m
          [0m🔴 Disconnected[0m
        [36m</span>[39m
      [36m</div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"add-component-section border-b p-3"[39m
      [36m>[39m
        [36m<button[39m
          [33maria-label[39m=[32m"Add Component"[39m
          [33mclass[39m=[32m"px-4 py-2 rounded text-sm font-medium bg-blue-600 text-white hover:bg-blue-700"[39m
          [33mtype[39m=[32m"button"[39m
        [36m>[39m
          [0m+ Add Component[0m
        [36m</button>[39m
      [36m</div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"editor-wrapper relative"[39m
      [36m>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"editor-content"[39m
        [36m>[39m
          [0mMock Editor Content[0m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"collaboration-cursors absolute inset-0 pointer-events-none"[39m
          [33mdata-testid[39m=[32m"collaboration-cursors"[39m
        [36m/>[39m
      [36m</div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"conflict-resolver hidden"[39m
        [33mdata-testid[39m=[32m"conflict-resolver"[39m
      [36m/>[39m
      [36m<div[39m
        [33mclass[39m=[32m"content-processor hidden"[39m
        [33mdata-testid[39m=[32m"content-processor"[39m
      [36m/>[39m
    [36m</div>[39m
  [36m</div>[39m
[36m</body>[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"script-editor "[39m
        [33mdata-testid[39m=[32m"script-editor"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"toolbar border-b border-gray-200 p-2 flex gap-2"[39m
          [33mdata-testid[39m=[32m"editor-toolbar"[39m
        [36m>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"bold-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mB[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"italic-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mI[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"bullet-list-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0m•[0m
          [36m</button>[39m
          [36m<select[39m
            [33mclass[39m=[32m"px-2 py-1 border rounded"[39m
            [33mdata-testid[39m=[32m"heading-select"[39m
          [36m>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"0"[39m
            [36m>[39m
              [0mParagraph[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"1"[39m
            [36m>[39m
              [0mHeading 1[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"2"[39m
            [36m>[39m
              [0mHeading 2[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"3"[39m
            [36m>[39m
              [0mHeading 3[0m
            [36m</option>[39m
          [36m</select>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"collaboration-status p-2 bg-gray-50 text-sm"[39m
          [33mdata-testid[39m=[32m"collaboration-status"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"status-indicator disconnected"[39m
            [33mdata-testid[39m=[32m"connection-status"[39m
          [36m>[39m
            [0m🔴 Disconnected[0m
          [36m</span>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"add-component-section border-b p-3"[39m
        [36m>[39m
          [36m<button[39m
            [33maria-label[39m=[32m"Add Component"[39m
            [33mclass[39m=[32m"px-4 py-2 rounded text-sm font-medium bg-blue-600 text-white hover:bg-blue-700"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0m+ Add Component[0m
          [36m</button>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"editor-wrapper relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mdata-testid[39m=[32m"editor-content"[39m
          [36m>[39m
            [0mMock Editor Content[0m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"collaboration-cursors absolute inset-0 pointer-events-none"[39m
            [33mdata-testid[39m=[32m"collaboration-cursors"[39m
          [36m/>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"conflict-resolver hidden"[39m
          [33mdata-testid[39m=[32m"conflict-resolver"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"content-processor hidden"[39m
          [33mdata-testid[39m=[32m"content-processor"[39m
        [36m/>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m
   × Script Component Management - V2 Requirements > Component Creation > should display a list of existing components 4ms
     → Cannot read properties of undefined (reading 'substring')
   × Script Component Management - V2 Requirements > Component Creation > should allow editing a component when clicked 1ms
     → Cannot read properties of undefined (reading 'substring')
   × Script Component Management - V2 Requirements > Component Creation > should delete a component when delete button is clicked 1ms
     → Cannot read properties of undefined (reading 'substring')
   × Script Component Management - V2 Requirements > Component Creation > should support drag-and-drop reordering of components 1ms
     → Cannot read properties of undefined (reading 'substring')
   × Script Component Management - V2 Requirements > Component Creation > should limit components to 18 maximum 1ms
     → Cannot read properties of undefined (reading 'substring')
   × Script Component Management - V2 Requirements > Component Performance Requirements > should auto-save component changes within 1 second 1ms
     → Cannot read properties of undefined (reading 'substring')
stdout | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Provider Integration Contracts > should connect provider after initialization with authentication context
ScriptEditor: useEffect mount - provider exists: [33mfalse[39m initializing: [33mfalse[39m
ScriptEditor: Starting provider initialization
ScriptEditor: Initializing provider for document: test-document-456

stderr | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Provider Integration Contracts > should connect provider after initialization with authentication context
AuthenticatedProviderFactory: Failed to create provider: Error: [vitest] No "getSupabaseClient" export is defined on the "../../lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:46:30[90m)[39m
    at initializeProvider [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/components/editor/ScriptEditor.tsx:258:39[90m)[39m {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"../../lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Provider Integration Contracts > should connect provider after initialization with authentication context
ScriptEditor: Failed to initialize collaboration provider: Error: Failed to create authenticated provider: [vitest] No "getSupabaseClient" export is defined on the "../../lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:86:13[90m)[39m
    at initializeProvider [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/components/editor/ScriptEditor.tsx:258:39[90m)[39m

stdout | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Provider Integration Contracts > should display connection status based on provider state
ScriptEditor: useEffect mount - provider exists: [33mfalse[39m initializing: [33mfalse[39m
ScriptEditor: Starting provider initialization
ScriptEditor: Initializing provider for document: test-document-456

stderr | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Provider Integration Contracts > should display connection status based on provider state
AuthenticatedProviderFactory: Failed to create provider: Error: [vitest] No "getSupabaseClient" export is defined on the "../../lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:46:30[90m)[39m
    at initializeProvider [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/components/editor/ScriptEditor.tsx:258:39[90m)[39m {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"../../lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Provider Integration Contracts > should display connection status based on provider state
ScriptEditor: Failed to initialize collaboration provider: Error: Failed to create authenticated provider: [vitest] No "getSupabaseClient" export is defined on the "../../lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:86:13[90m)[39m
    at initializeProvider [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/components/editor/ScriptEditor.tsx:258:39[90m)[39m

stdout | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Error Handling Integration > should handle provider initialization failure with auth context
ScriptEditor: useEffect mount - provider exists: [33mfalse[39m initializing: [33mfalse[39m
ScriptEditor: Starting provider initialization
ScriptEditor: Initializing provider for document: test-document-456

stderr | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Error Handling Integration > should handle provider initialization failure with auth context
AuthenticatedProviderFactory: Failed to create provider: Error: [vitest] No "getSupabaseClient" export is defined on the "../../lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at VitestMocker.createError [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:284:17[90m)[39m
    at Object.get [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4mvitest[24m/dist/chunks/execute.B7h3T_Hc.js:330:16[90m)[39m
    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:46:30[90m)[39m
    at initializeProvider [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/components/editor/ScriptEditor.tsx:258:39[90m)[39m {
  codeFrame: [32m'vi\x1B[33m.\x1B[39m\x1B[34mmock\x1B[39m(\x1B[35mimport\x1B[39m(\x1B[32m"../../lib/supabase"\x1B[39m)\x1B[33m,\x1B[39m \x1B[35masync\x1B[39m (importOriginal) \x1B[33m=>\x1B[39m {\n'[39m +
    [32m'  \x1B[35mconst\x1B[39m actual \x1B[33m=\x1B[39m \x1B[35mawait\x1B[39m \x1B[34mimportOriginal\x1B[39m()\n'[39m +
    [32m'  \x1B[35mreturn\x1B[39m {\n'[39m +
    [32m'    \x1B[33m...\x1B[39mactual\x1B[33m,\x1B[39m\n'[39m +
    [32m'    \x1B[90m// your mocked methods\x1B[39m\n'[39m +
    [32m'  }\n'[39m +
    [32m'})'[39m
}

stderr | src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Error Handling Integration > should handle provider initialization failure with auth context
ScriptEditor: Failed to initialize collaboration provider: Error: Failed to create authenticated provider: [vitest] No "getSupabaseClient" export is defined on the "../../lib/supabase" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

    at Function.create [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/collaboration/AuthenticatedProviderFactory.ts:86:13[90m)[39m
    at initializeProvider [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/components/editor/ScriptEditor.tsx:258:39[90m)[39m

 ❯ src/components/editor/ScriptEditor.auth-integration.test.tsx (6 tests | 4 failed) 6099ms
   × ScriptEditor Authentication Integration > Authentication Context Flow > should initialize CustomSupabaseProvider with authenticated user context 20ms
     → expected "CustomSupabaseProvider" to be called at least once
   × ScriptEditor Authentication Integration > Authentication Context Flow > should fallback to anonymous mode when authentication fails 4ms
     → expected "CustomSupabaseProvider" to be called at least once
   × ScriptEditor Authentication Integration > Authentication Context Flow > should pass project context to authenticated provider factory 3011ms
     → expected "CustomSupabaseProvider" to be called at least once

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"script-editor "[39m
        [33mdata-testid[39m=[32m"script-editor"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"toolbar border-b border-gray-200 p-2 flex gap-2"[39m
          [33mdata-testid[39m=[32m"editor-toolbar"[39m
        [36m>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"bold-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mB[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"italic-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mI[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"bullet-list-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0m•[0m
          [36m</button>[39m
          [36m<select[39m
            [33mclass[39m=[32m"px-2 py-1 border rounded"[39m
            [33mdata-testid[39m=[32m"heading-select"[39m
          [36m>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"0"[39m
            [36m>[39m
              [0mParagraph[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"1"[39m
            [36m>[39m
              [0mHeading 1[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"2"[39m
            [36m>[39m
              [0mHeading 2[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"3"[39m
            [36m>[39m
              [0mHeading 3[0m
            [36m</option>[39m
          [36m</select>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"collaboration-status p-2 bg-gray-50 text-sm"[39m
          [33mdata-testid[39m=[32m"collaboration-status"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"status-indicator disconnected"[39m
            [33mdata-testid[39m=[32m"connection-status"[39m
          [36m>[39m
            [0m🔴 Disconnected[0m
          [36m</span>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"add-component-section border-b p-3"[39m
        [36m>[39m
          [36m<button[39m
            [33maria-label[39m=[32m"Add Component"[39m
            [33mclass[39m=[32m"px-4 py-2 rounded text-sm font-medium bg-gray-100 text-gray-400 cursor-not-allowed"[39m
            [33mdisabled[39m=[32m""[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0m+ Add Component[0m
          [36m</button>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"editor-wrapper relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mdata-testid[39m=[32m"editor-content"[39m
          [36m>[39m
            [0mMock Editor Content[0m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"collaboration-cursors absolute inset-0 pointer-events-none"[39m
            [33mdata-testid[39m=[32m"collaboration-cursors"[39m
          [36m/>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"conflict-resolver hidden"[39m
          [33mdata-testid[39m=[32m"conflict-resolver"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"content-processor hidden"[39m
          [33mdata-testid[39m=[32m"content-processor"[39m
        [36m/>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m
   × ScriptEditor Authentication Integration > Provider Integration Contracts > should connect provider after initialization with authentication context 3004ms
     → expected "spy" to be called at least once

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"script-editor "[39m
        [33mdata-testid[39m=[32m"script-editor"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"toolbar border-b border-gray-200 p-2 flex gap-2"[39m
          [33mdata-testid[39m=[32m"editor-toolbar"[39m
        [36m>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"bold-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mB[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"italic-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mI[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"bullet-list-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0m•[0m
          [36m</button>[39m
          [36m<select[39m
            [33mclass[39m=[32m"px-2 py-1 border rounded"[39m
            [33mdata-testid[39m=[32m"heading-select"[39m
          [36m>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"0"[39m
            [36m>[39m
              [0mParagraph[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"1"[39m
            [36m>[39m
              [0mHeading 1[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"2"[39m
            [36m>[39m
              [0mHeading 2[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"3"[39m
            [36m>[39m
              [0mHeading 3[0m
            [36m</option>[39m
          [36m</select>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"collaboration-status p-2 bg-gray-50 text-sm"[39m
          [33mdata-testid[39m=[32m"collaboration-status"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"status-indicator disconnected"[39m
            [33mdata-testid[39m=[32m"connection-status"[39m
          [36m>[39m
            [0m🔴 Disconnected[0m
          [36m</span>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"add-component-section border-b p-3"[39m
        [36m>[39m
          [36m<button[39m
            [33maria-label[39m=[32m"Add Component"[39m
            [33mclass[39m=[32m"px-4 py-2 rounded text-sm font-medium bg-gray-100 text-gray-400 cursor-not-allowed"[39m
            [33mdisabled[39m=[32m""[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0m+ Add Component[0m
          [36m</button>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"editor-wrapper relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mdata-testid[39m=[32m"editor-content"[39m
          [36m>[39m
            [0mMock Editor Content[0m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"collaboration-cursors absolute inset-0 pointer-events-none"[39m
            [33mdata-testid[39m=[32m"collaboration-cursors"[39m
          [36m/>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"conflict-resolver hidden"[39m
          [33mdata-testid[39m=[32m"conflict-resolver"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"content-processor hidden"[39m
          [33mdata-testid[39m=[32m"content-processor"[39m
        [36m/>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m
   ✓ ScriptEditor Authentication Integration > Provider Integration Contracts > should display connection status based on provider state 5ms
   ✓ ScriptEditor Authentication Integration > Error Handling Integration > should handle provider initialization failure with auth context 55ms

⎯⎯⎯⎯⎯⎯ Failed Tests 39 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Authentication Context Flow > should initialize CustomSupabaseProvider with authenticated user context
AssertionError: expected "CustomSupabaseProvider" to be called at least once
 ❯ src/components/editor/ScriptEditor.auth-integration.test.tsx:88:38
     86| 
     87|       // Verify provider was called with correct configuration
     88|       expect(CustomSupabaseProvider).toHaveBeenCalled();
       |                                      ^
     89|     });
     90| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/39]⎯

 FAIL  src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Authentication Context Flow > should fallback to anonymous mode when authentication fails
AssertionError: expected "CustomSupabaseProvider" to be called at least once
 ❯ src/components/editor/ScriptEditor.auth-integration.test.tsx:117:38
    115| 
    116|       // Should still create provider in anonymous mode
    117|       expect(CustomSupabaseProvider).toHaveBeenCalled();
       |                                      ^
    118|     });
    119| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/39]⎯

 FAIL  src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Authentication Context Flow > should pass project context to authenticated provider factory
AssertionError: expected "CustomSupabaseProvider" to be called at least once

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"script-editor "[39m
        [33mdata-testid[39m=[32m"script-editor"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"toolbar border-b border-gray-200 p-2 flex gap-2"[39m
          [33mdata-testid[39m=[32m"editor-toolbar"[39m
        [36m>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"bold-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mB[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"italic-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mI[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"bullet-list-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0m•[0m
          [36m</button>[39m
          [36m<select[39m
            [33mclass[39m=[32m"px-2 py-1 border rounded"[39m
            [33mdata-testid[39m=[32m"heading-select"[39m
          [36m>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"0"[39m
            [36m>[39m
              [0mParagraph[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"1"[39m
            [36m>[39m
              [0mHeading 1[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"2"[39m
            [36m>[39m
              [0mHeading 2[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"3"[39m
            [36m>[39m
              [0mHeading 3[0m
            [36m</option>[39m
          [36m</select>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"collaboration-status p-2 bg-gray-50 text-sm"[39m
          [33mdata-testid[39m=[32m"collaboration-status"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"status-indicator disconnected"[39m
            [33mdata-testid[39m=[32m"connection-status"[39m
          [36m>[39m
            [0m🔴 Disconnected[0m
          [36m</span>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"add-component-section border-b p-3"[39m
        [36m>[39m
          [36m<button[39m
            [33maria-label[39m=[32m"Add Component"[39m
            [33mclass[39m=[32m"px-4 py-2 rounded text-sm font-medium bg-gray-100 text-gray-400 cursor-not-allowed"[39m
            [33mdisabled[39m=[32m""[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0m+ Add Component[0m
          [36m</button>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"editor-wrapper relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mdata-testid[39m=[32m"editor-content"[39m
          [36m>[39m
            [0mMock Editor Content[0m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"collaboration-cursors absolute inset-0 pointer-events-none"[39m
            [33mdata-testid[39m=[32m"collaboration-cursors"[39m
          [36m/>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"conflict-resolver hidden"[39m
          [33mdata-testid[39m=[32m"conflict-resolver"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"content-processor hidden"[39m
          [33mdata-testid[39m=[32m"content-processor"[39m
        [36m/>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m
 ❯ __vi_import_1__.waitFor.timeout src/components/editor/ScriptEditor.auth-integration.test.tsx:139:40
    137| 
    138|       await waitFor(() => {
    139|         expect(CustomSupabaseProvider).toHaveBeenCalled();
       |                                        ^
    140|       }, { timeout: 3000 });
    141| 
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/39]⎯

 FAIL  src/components/editor/ScriptEditor.auth-integration.test.tsx > ScriptEditor Authentication Integration > Provider Integration Contracts > should connect provider after initialization with authentication context
AssertionError: expected "spy" to be called at least once

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"script-editor "[39m
        [33mdata-testid[39m=[32m"script-editor"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"toolbar border-b border-gray-200 p-2 flex gap-2"[39m
          [33mdata-testid[39m=[32m"editor-toolbar"[39m
        [36m>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"bold-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mB[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"italic-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mI[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"bullet-list-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0m•[0m
          [36m</button>[39m
          [36m<select[39m
            [33mclass[39m=[32m"px-2 py-1 border rounded"[39m
            [33mdata-testid[39m=[32m"heading-select"[39m
          [36m>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"0"[39m
            [36m>[39m
              [0mParagraph[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"1"[39m
            [36m>[39m
              [0mHeading 1[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"2"[39m
            [36m>[39m
              [0mHeading 2[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"3"[39m
            [36m>[39m
              [0mHeading 3[0m
            [36m</option>[39m
          [36m</select>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"collaboration-status p-2 bg-gray-50 text-sm"[39m
          [33mdata-testid[39m=[32m"collaboration-status"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"status-indicator disconnected"[39m
            [33mdata-testid[39m=[32m"connection-status"[39m
          [36m>[39m
            [0m🔴 Disconnected[0m
          [36m</span>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"add-component-section border-b p-3"[39m
        [36m>[39m
          [36m<button[39m
            [33maria-label[39m=[32m"Add Component"[39m
            [33mclass[39m=[32m"px-4 py-2 rounded text-sm font-medium bg-gray-100 text-gray-400 cursor-not-allowed"[39m
            [33mdisabled[39m=[32m""[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0m+ Add Component[0m
          [36m</button>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"editor-wrapper relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mdata-testid[39m=[32m"editor-content"[39m
          [36m>[39m
            [0mMock Editor Content[0m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"collaboration-cursors absolute inset-0 pointer-events-none"[39m
            [33mdata-testid[39m=[32m"collaboration-cursors"[39m
          [36m/>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"conflict-resolver hidden"[39m
          [33mdata-testid[39m=[32m"conflict-resolver"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"content-processor hidden"[39m
          [33mdata-testid[39m=[32m"content-processor"[39m
        [36m/>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m
 ❯ __vi_import_1__.waitFor.timeout src/components/editor/ScriptEditor.auth-integration.test.tsx:176:38
    174| 
    175|       await waitFor(() => {
    176|         expect(mockProvider.connect).toHaveBeenCalled();
       |                                      ^
    177|       }, { timeout: 3000 });
    178|     });
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/39]⎯

 FAIL  tests/unit/components/ScriptComponentManagement.test.tsx > Script Component Management - V2 Requirements > Component Creation > should create a new component when Add Component button is clicked
TestingLibraryElementError: Unable to find an element by: [data-testid="component-comp-123"]

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"script-editor "[39m
      [33mdata-testid[39m=[32m"script-editor"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"toolbar border-b border-gray-200 p-2 flex gap-2"[39m
        [33mdata-testid[39m=[32m"editor-toolbar"[39m
      [36m>[39m
        [36m<button[39m
          [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
          [33mdata-testid[39m=[32m"bold-button"[39m
          [33mtype[39m=[32m"button"[39m
        [36m>[39m
          [0mB[0m
        [36m</button>[39m
        [36m<button[39m
          [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
          [33mdata-testid[39m=[32m"italic-button"[39m
          [33mtype[39m=[32m"button"[39m
        [36m>[39m
          [0mI[0m
        [36m</button>[39m
        [36m<button[39m
          [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
          [33mdata-testid[39m=[32m"bullet-list-button"[39m
          [33mtype[39m=[32m"button"[39m
        [36m>[39m
          [0m•[0m
        [36m</button>[39m
        [36m<select[39m
          [33mclass[39m=[32m"px-2 py-1 border rounded"[39m
          [33mdata-testid[39m=[32m"heading-select"[39m
        [36m>[39m
          [36m<option[39m
            [33mvalue[39m=[32m"0"[39m
          [36m>[39m
            [0mParagraph[0m
          [36m</option>[39m
          [36m<option[39m
            [33mvalue[39m=[32m"1"[39m
          [36m>[39m
            [0mHeading 1[0m
          [36m</option>[39m
          [36m<option[39m
            [33mvalue[39m=[32m"2"[39m
          [36m>[39m
            [0mHeading 2[0m
          [36m</option>[39m
          [36m<option[39m
            [33mvalue[39m=[32m"3"[39m
          [36m>[39m
            [0mHeading 3[0m
          [36m</option>[39m
        [36m</select>[39m
      [36m</div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"collaboration-status p-2 bg-gray-50 text-sm"[39m
        [33mdata-testid[39m=[32m"collaboration-status"[39m
      [36m>[39m
        [36m<span[39m
          [33mclass[39m=[32m"status-indicator disconnected"[39m
          [33mdata-testid[39m=[32m"connection-status"[39m
        [36m>[39m
          [0m🔴 Disconnected[0m
        [36m</span>[39m
      [36m</div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"add-component-section border-b p-3"[39m
      [36m>[39m
        [36m<button[39m
          [33maria-label[39m=[32m"Add Component"[39m
          [33mclass[39m=[32m"px-4 py-2 rounded text-sm font-medium bg-blue-600 text-white hover:bg-blue-700"[39m
          [33mtype[39m=[32m"button"[39m
        [36m>[39m
          [0m+ Add Component[0m
        [36m</button>[39m
      [36m</div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"editor-wrapper relative"[39m
      [36m>[39m
        [36m<div[39m
          [33mdata-testid[39m=[32m"editor-content"[39m
        [36m>[39m
          [0mMock Editor Content[0m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"collaboration-cursors absolute inset-0 pointer-events-none"[39m
          [33mdata-testid[39m=[32m"collaboration-cursors"[39m
        [36m/>[39m
      [36m</div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"conflict-resolver hidden"[39m
        [33mdata-testid[39m=[32m"conflict-resolver"[39m
      [36m/>[39m
      [36m<div[39m
        [33mclass[39m=[32m"content-processor hidden"[39m
        [33mdata-testid[39m=[32m"content-processor"[39m
      [36m/>[39m
    [36m</div>[39m
  [36m</div>[39m
[36m</body>[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"script-editor "[39m
        [33mdata-testid[39m=[32m"script-editor"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"toolbar border-b border-gray-200 p-2 flex gap-2"[39m
          [33mdata-testid[39m=[32m"editor-toolbar"[39m
        [36m>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"bold-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mB[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"italic-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0mI[0m
          [36m</button>[39m
          [36m<button[39m
            [33mclass[39m=[32m"px-3 py-1 rounded bg-gray-100"[39m
            [33mdata-testid[39m=[32m"bullet-list-button"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0m•[0m
          [36m</button>[39m
          [36m<select[39m
            [33mclass[39m=[32m"px-2 py-1 border rounded"[39m
            [33mdata-testid[39m=[32m"heading-select"[39m
          [36m>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"0"[39m
            [36m>[39m
              [0mParagraph[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"1"[39m
            [36m>[39m
              [0mHeading 1[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"2"[39m
            [36m>[39m
              [0mHeading 2[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"3"[39m
            [36m>[39m
              [0mHeading 3[0m
            [36m</option>[39m
          [36m</select>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"collaboration-status p-2 bg-gray-50 text-sm"[39m
          [33mdata-testid[39m=[32m"collaboration-status"[39m
        [36m>[39m
          [36m<span[39m
            [33mclass[39m=[32m"status-indicator disconnected"[39m
            [33mdata-testid[39m=[32m"connection-status"[39m
          [36m>[39m
            [0m🔴 Disconnected[0m
          [36m</span>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"add-component-section border-b p-3"[39m
        [36m>[39m
          [36m<button[39m
            [33maria-label[39m=[32m"Add Component"[39m
            [33mclass[39m=[32m"px-4 py-2 rounded text-sm font-medium bg-blue-600 text-white hover:bg-blue-700"[39m
            [33mtype[39m=[32m"button"[39m
          [36m>[39m
            [0m+ Add Component[0m
          [36m</button>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"editor-wrapper relative"[39m
        [36m>[39m
          [36m<div[39m
            [33mdata-testid[39m=[32m"editor-content"[39m
          [36m>[39m
            [0mMock Editor Content[0m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"collaboration-cursors absolute inset-0 pointer-events-none"[39m
            [33mdata-testid[39m=[32m"collaboration-cursors"[39m
          [36m/>[39m
        [36m</div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"conflict-resolver hidden"[39m
          [33mdata-testid[39m=[32m"conflict-resolver"[39m
        [36m/>[39m
        [36m<div[39m
          [33mclass[39m=[32m"content-processor hidden"[39m
          [33mdata-testid[39m=[32m"content-processor"[39m
        [36m/>[39m
      [36m</div>[39m
    [36m</div>[39m
  [36m</body>[39m
[36m</html>[39m
 ❯ waitForWrapper node_modules/@testing-library/dom/dist/wait-for.js:163:27
 ❯ tests/unit/components/ScriptComponentManagement.test.tsx:57:13
     55| 
     56|       // Verify component appears in list
     57|       await waitFor(() => {
       |             ^
     58|         expect(screen.getByTestId('component-comp-123')).toBeInTheDocu…
     59|       });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/39]⎯

 FAIL  tests/unit/components/ScriptComponentManagement.test.tsx > Script Component Management - V2 Requirements > Component Creation > should display a list of existing components
 FAIL  tests/unit/components/ScriptComponentManagement.test.tsx > Script Component Management - V2 Requirements > Component Creation > should allow editing a component when clicked
 FAIL  tests/unit/components/ScriptComponentManagement.test.tsx > Script Component Management - V2 Requirements > Component Creation > should delete a component when delete button is clicked
 FAIL  tests/unit/components/ScriptComponentManagement.test.tsx > Script Component Management - V2 Requirements > Component Creation > should support drag-and-drop reordering of components
 FAIL  tests/unit/components/ScriptComponentManagement.test.tsx > Script Component Management - V2 Requirements > Component Creation > should limit components to 18 maximum
 FAIL  tests/unit/components/ScriptComponentManagement.test.tsx > Script Component Management - V2 Requirements > Component Performance Requirements > should auto-save component changes within 1 second
TypeError: Cannot read properties of undefined (reading 'substring')
 ❯ src/components/editor/ScriptEditor.tsx:494:77
    492|               <div className="flex-1">
    493|                 <div className="text-sm text-gray-500">Component {inde…
    494|                 <div className="text-xs text-gray-400">{component.plai…
       |                                                                             ^
    495|               </div>
    496|               {component.sceneId && (
 ❯ ScriptEditor src/components/editor/ScriptEditor.tsx:483:23
 ❯ Object.react_stack_bottom_frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/39]⎯

 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Component Initialization > should render ScriptEditor component successfully
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Component Initialization > should render TipTap editor with basic rich text features
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Component Initialization > should initialize with Y.js document binding
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Rich Text Features > should support bold text formatting
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Rich Text Features > should support italic text formatting
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Rich Text Features > should support bulleted lists
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Rich Text Features > should support heading levels
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Y.js Collaboration Integration > should bind to Y.js document for collaborative editing
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Y.js Collaboration Integration > should sync local changes to Y.js document
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Y.js Collaboration Integration > should display collaboration cursor from remote users
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Content Persistence > should auto-save content to Supabase via Y.js
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Content Persistence > should handle optimistic locking conflicts
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Content Persistence > should persist TipTap JSON to JSONB storage
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Component Structure Management > should support 3-18 components per script
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Component Structure Management > should allow reordering components with drag and drop
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Component Structure Management > should maintain 1:1 component-to-scene mapping
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Connection Status > should display connection status to collaboration server
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Connection Status > should show sync status with other users
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Connection Status > should display active user presence indicators
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Performance Requirements > should handle 10-20 concurrent users smoothly
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Performance Requirements > should maintain <200ms comment sync latency
 FAIL  tests/unit/components/ScriptEditor.test.tsx > ScriptEditor > Performance Requirements > should update presence indicators <500ms
TypeError: default.configure is not a function
 ❯ ScriptEditor src/components/editor/ScriptEditor.tsx:98:18
     96|   const editor = useEditor({
     97|     extensions: [
     98|       StarterKit.configure({
       |                  ^
     99|         // Disable History extension - Y.js Collaboration provides its…
    100|         history: false,
 ❯ Object.react_stack_bottom_frame node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot node_modules/react-dom/cjs/react-dom-client.development.js:14462:44

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/39]⎯

 FAIL  tests/unit/collaboration/circuitBreaker.test.ts > Circuit Breaker Integration > Wrapped Operations > should wrap loadInitialState with circuit breaker
TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
 ❯ CustomSupabaseProvider.loadInitialStateOperation src/lib/collaboration/custom-supabase-provider.ts:183:10
    181|         .select('id, state_vector, version')
    182|         .eq('id', this.documentId)
    183|         .maybeSingle(); // Use maybeSingle() to handle 0 or 1 rows gra…
       |          ^
    184| 
    185|       if (docError) {
 ❯ node_modules/opossum/lib/circuit.js:521:38
 ❯ CircuitBreaker.call node_modules/opossum/lib/circuit.js:497:12
 ❯ CircuitBreaker.fire node_modules/opossum/lib/circuit.js:415:22
 ❯ CustomSupabaseProvider.loadInitialState src/lib/collaboration/custom-supabase-provider.ts:263:42
 ❯ tests/unit/collaboration/circuitBreaker.test.ts:232:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/39]⎯

 FAIL  tests/unit/collaboration/custom-supabase-provider.test.ts > CustomSupabaseProvider Integration > should connect within performance targets
TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
 ❯ CustomSupabaseProvider.loadInitialStateOperation src/lib/collaboration/custom-supabase-provider.ts:183:10
    181|         .select('id, state_vector, version')
    182|         .eq('id', this.documentId)
    183|         .maybeSingle(); // Use maybeSingle() to handle 0 or 1 rows gra…
       |          ^
    184| 
    185|       if (docError) {
 ❯ node_modules/opossum/lib/circuit.js:521:38
 ❯ CircuitBreaker.call node_modules/opossum/lib/circuit.js:497:12
 ❯ CircuitBreaker.fire node_modules/opossum/lib/circuit.js:415:22
 ❯ CustomSupabaseProvider.connect src/lib/collaboration/custom-supabase-provider.ts:137:42
 ❯ tests/unit/collaboration/custom-supabase-provider.test.ts:55:20

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/39]⎯

 FAIL  tests/unit/collaboration/custom-supabase-provider.test.ts > CustomSupabaseProvider Integration > should support concurrent users without degradation
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ tests/unit/collaboration/custom-supabase-provider.test.ts:84:58
     82|     );
     83| 
     84|     expect(results.every(r => r.status === 'fulfilled')).toBe(true);
       |                                                          ^
     85|     expect(providers.every(p => p.connected)).toBe(true);
     86|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/39]⎯

 FAIL  tests/unit/collaboration/custom-supabase-provider.test.ts > CustomSupabaseProvider Integration > should provide basic document state access
TypeError: this.supabaseClient.from(...).select(...).eq(...).maybeSingle is not a function
 ❯ CustomSupabaseProvider.loadInitialStateOperation src/lib/collaboration/custom-supabase-provider.ts:183:10
    181|         .select('id, state_vector, version')
    182|         .eq('id', this.documentId)
    183|         .maybeSingle(); // Use maybeSingle() to handle 0 or 1 rows gra…
       |          ^
    184| 
    185|       if (docError) {
 ❯ node_modules/opossum/lib/circuit.js:521:38
 ❯ CircuitBreaker.call node_modules/opossum/lib/circuit.js:497:12
 ❯ CircuitBreaker.fire node_modules/opossum/lib/circuit.js:415:22
 ❯ CustomSupabaseProvider.connect src/lib/collaboration/custom-supabase-provider.ts:137:42
 ❯ tests/unit/collaboration/custom-supabase-provider.test.ts:99:20

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/39]⎯

 FAIL  tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Circuit Breaker Protection > should open circuit after threshold failures
AssertionError: expected 'query.is is not a function' to contain 'Service temporarily unavailable'

Expected: [32m"Service temporarily unavailable"[39m
Received: [31m"query.is is not a function"[39m

 ❯ tests/unit/database/scriptComponentManagerWithResilience.test.ts:74:28
     72| 
     73|       expect(duration).toBeLessThan(100); // Should be instant fallback
     74|       expect(result.error).toContain('Service temporarily unavailable'…
       |                            ^
     75|     });
     76| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/39]⎯

 FAIL  tests/unit/database/scriptComponentManagerWithResilience.test.ts > ResilientScriptComponentManager > Circuit Breaker Protection > should queue operations when circuit is open
AssertionError: expected undefined to be true // Object.is equality

[32m- Expected:[39m 
true

[31m+ Received:[39m 
undefined

 ❯ tests/unit/database/scriptComponentManagerWithResilience.test.ts:84:38
     82| 
     83|       expect(result.success).toBe(false);
     84|       expect((result as any).queued).toBe(true);
       |                                      ^
     85|       expect(manager.getOfflineQueueSize()).toBeGreaterThan(0);
     86|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/39]⎯


 Test Files  6 failed | 18 passed (24)
      Tests  39 failed | 248 passed | 3 skipped (290)
   Start at  01:47:04
   Duration  6.84s (transform 619ms, setup 2.26s, collect 1.40s, tests 9.91s, environment 6.23s, prepare 1.46s)

