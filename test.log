
> build@1.0.0 test
> NODE_OPTIONS='--max-old-space-size=8192' vitest run --exclude '**/**.feature.test.**'


 RUN  v3.2.4 /Volumes/HestAI-Projects/eav-orchestrator/build

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > IndexedDB Queue Operations > should initialize IndexedDB with correct schema
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > IndexedDB Queue Operations > should enqueue operations to IndexedDB
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > IndexedDB Queue Operations > should dequeue operations in FIFO order
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > IndexedDB Queue Operations > should peek at next operation without removing it
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > IndexedDB Queue Operations > should handle empty queue operations gracefully
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > IndexedDB Queue Operations > should clear all operations from queue
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stderr | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Fallback Chain Implementation > should fallback to localStorage when IndexedDB unavailable
IndexedDB initialization failed, falling back to localStorage: Error: IndexedDB not supported
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:131:16
    at new Promise (<anonymous>)
    at IndexedDBQueue.initializeIndexedDB [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:128:12[90m)[39m
    at IndexedDBQueue.initialize [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:97:18[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/database/indexedDBQueue.test.ts:181:19
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m

stderr | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Fallback Chain Implementation > should fallback to memory when both IndexedDB and localStorage fail
IndexedDB initialization failed, falling back to localStorage: Error: IndexedDB not supported
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:131:16
    at new Promise (<anonymous>)
    at IndexedDBQueue.initializeIndexedDB [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:128:12[90m)[39m
    at IndexedDBQueue.initialize [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:97:18[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/database/indexedDBQueue.test.ts:197:19
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m
localStorage initialization failed, falling back to memory: Error: localStorage not available
    at IndexedDBQueue.initializeLocalStorage [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:233:13[90m)[39m
    at IndexedDBQueue.initialize [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:108:14[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/database/indexedDBQueue.test.ts:197:7
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Fallback Chain Implementation > should migrate data from localStorage to IndexedDB
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Fallback Chain Implementation > should migrate data from localStorage to IndexedDB
Migrating 1 operations from localStorage to IndexedDB

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Fallback Chain Implementation > should migrate data from localStorage to IndexedDB
Migration complete, localStorage cleared

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Fallback Chain Implementation > should handle migration of corrupted localStorage data gracefully
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stderr | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Fallback Chain Implementation > should handle migration of corrupted localStorage data gracefully
Migration from localStorage failed: SyntaxError: Unexpected token 'i', "invalid-json-data" is not valid JSON
    at JSON.parse (<anonymous>)
    at IndexedDBQueue.migrateFromLocalStorage [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:265:32[90m)[39m
    at IndexedDBQueue.initialize [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:102:18[90m)[39m
[90m    at runNextTicks (node:internal/process/task_queues:65:5)[39m
[90m    at processImmediate (node:internal/timers:453:9)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/database/indexedDBQueue.test.ts:236:7
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Error Handling and Resilience > should handle IndexedDB quota exceeded gracefully
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stderr | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Error Handling and Resilience > should handle IndexedDB quota exceeded gracefully
IndexedDB initialization failed, falling back to localStorage: Error: IndexedDB open failed: undefined
    at Object.request.onerror [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:144:16[90m)[39m
    at Timeout._onTimeout [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/database/indexedDBQueue.test.ts:258:21[90m)[39m
[90m    at listOnTimeout (node:internal/timers:588:17)[39m
[90m    at processTimers (node:internal/timers:523:7)[39m

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Error Handling and Resilience > should handle database corruption gracefully
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stderr | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Error Handling and Resilience > should handle database corruption gracefully
IndexedDB initialization failed, falling back to localStorage: Error: IndexedDB open failed: undefined
    at Object.request.onerror [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:144:16[90m)[39m
    at Timeout._onTimeout [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/database/indexedDBQueue.test.ts:293:21[90m)[39m
[90m    at listOnTimeout (node:internal/timers:588:17)[39m
[90m    at processTimers (node:internal/timers:523:7)[39m

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Error Handling and Resilience > should maintain atomicity during operations
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Performance Requirements > should handle large queue operations efficiently
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Performance Requirements > should not block main thread during operations
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stderr | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Browser Compatibility > should handle private browsing mode gracefully
IndexedDB initialization failed, falling back to localStorage: Error: IndexedDB open failed: undefined
    at Object.request.onerror [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:144:16[90m)[39m
    at Timeout._onTimeout [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/database/indexedDBQueue.test.ts:398:21[90m)[39m
[90m    at listOnTimeout (node:internal/timers:588:17)[39m
[90m    at processTimers (node:internal/timers:523:7)[39m

stderr | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Browser Compatibility > should work in environments without IndexedDB support
IndexedDB initialization failed, falling back to localStorage: Error: IndexedDB not supported
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:131:16
    at new Promise (<anonymous>)
    at IndexedDBQueue.initializeIndexedDB [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:128:12[90m)[39m
    at IndexedDBQueue.initialize [90m(/Volumes/HestAI-Projects/eav-orchestrator/build/[39msrc/lib/database/indexedDBQueue.ts:97:18[90m)[39m
    at [90m/Volumes/HestAI-Projects/eav-orchestrator/build/[39mtests/unit/database/indexedDBQueue.test.ts:419:19
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at [90mfile:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout [90m(file:///Volumes/HestAI-Projects/eav-orchestrator/build/[39mnode_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10[90m)[39m

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Schema Versioning & Migration > should initialize with current schema version
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Schema Versioning & Migration > should handle schema version upgrades
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Schema Versioning & Migration > should detect schema version mismatches
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Schema Versioning & Migration > should provide schema migration information
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Schema Versioning & Migration > should maintain data integrity during schema upgrades
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Schema Versioning & Migration > should handle schema downgrade gracefully
Running schema migrations from version 0 to 1
Applying schema migration for version 1

stdout | tests/unit/database/indexedDBQueue.test.ts > IndexedDBQueue > Schema Versioning & Migration > should coordinate with ClientLifecycleManager schema versions
Running schema migrations from version 0 to 1
Applying schema migration for version 1

 ✓ tests/unit/database/indexedDBQueue.test.ts (26 tests | 2 skipped) 45ms
 ✓ tests/unit/ordering/fractionalIndex.test.ts (29 tests) 11ms
 ✓ tests/repomix-ignore.test.ts (4 tests) 7ms
 ✓ src/lib/supabase.test.ts (18 tests | 3 skipped) 4ms
 ✓ tests/unit/resilience/retryWithBackoff.test.ts (17 tests) 3ms
 ✓ tests/unit/database/scriptComponentManager.test.ts (12 tests) 2ms
 ✓ tests/unit/collaboration/encoding.test.ts (17 tests) 1ms
 ✓ tests/unit/types/editor.test.ts (16 tests) 1ms
 ✓ tests/unit/types/scriptComponent.test.ts (13 tests) 1ms
⎯⎯⎯⎯⎯⎯ Unhandled Errors ⎯⎯⎯⎯⎯⎯

Vitest caught 1 unhandled error during the test run.
This might cause false positive tests. Resolve unhandled errors to make sure your tests are not affected.

⎯⎯⎯⎯⎯⎯ Unhandled Error ⎯⎯⎯⎯⎯⎯⎯
Error: Worker terminated due to reaching memory limit: JS heap out of memory
 ❯ [kOnExit] node:internal/worker:315:26
 ❯ Worker.<computed>.onexit node:internal/worker:231:20

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_WORKER_OUT_OF_MEMORY' }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯


 Test Files  9 passed (22)
      Tests  147 passed | 5 skipped (158)
     Errors  1 error
   Start at  09:51:30
   Duration  36.41s (transform 112ms, setup 82ms, collect 114ms, tests 74ms, environment 159ms, prepare 24ms)

