#!/bin/bash
set -euo pipefail

# Context Compilation Script for EAV Orchestrator Phase Boundaries
# Uses Repomix to create comprehensive project snapshots at critical transitions

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "${SCRIPT_DIR}/.." && pwd)"
CONTEXT_DIR="${PROJECT_ROOT}/.coord/context"
TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "no-git")
CURRENT_COMMIT=$(git rev-parse --short HEAD 2>/dev/null || echo "no-commit")

# Phase context filename
CONTEXT_FILE="${CONTEXT_DIR}/${TIMESTAMP}-${CURRENT_BRANCH}-phase-context.md"

echo "🔄 Compiling project context snapshot..."
echo "📁 Output: ${CONTEXT_FILE}"
echo "🌿 Branch: ${CURRENT_BRANCH} (${CURRENT_COMMIT})"

# Ensure context directory exists
mkdir -p "${CONTEXT_DIR}"

# Create temporary config file for Repomix
TEMP_CONFIG="${CONTEXT_DIR}/.repomix-temp-config.json"
cat > "${TEMP_CONFIG}" << 'EOF'
{
  "include": [
    "**/*.ts",
    "**/*.tsx",
    "**/*.js",
    "**/*.jsx",
    "**/*.json",
    "**/*.md",
    "**/*.yml",
    "**/*.yaml",
    "**/*.sh",
    "**/*.sql",
    "**/Dockerfile*",
    "**/.env.example"
  ],
  "exclude": [
    "node_modules/**",
    "dist/**",
    "build/**",
    "coverage/**",
    ".git/**",
    "**/*.log",
    "**/.DS_Store",
    "**/package-lock.json",
    "**/yarn.lock",
    "**/*.tsbuildinfo"
  ],
  "output": {
    "filePath": "PLACEHOLDER_PATH",
    "style": "markdown",
    "headerText": "# EAV Orchestrator Project Context Snapshot\n\nGenerated: PLACEHOLDER_TIMESTAMP\nBranch: PLACEHOLDER_BRANCH\nCommit: PLACEHOLDER_COMMIT\n\nThis snapshot captures the complete project state at a phase boundary for holistic orchestrator analysis.\n",
    "instructionFilePath": "",
    "removeComments": false,
    "showLineNumbers": true,
    "topFilesLength": 2000,
    "outputJson": false
  },
  "security": {
    "enableSecurityCheck": true
  }
}
EOF

# Replace placeholders in config
sed -i '' "s|PLACEHOLDER_PATH|${CONTEXT_FILE}|g" "${TEMP_CONFIG}"
sed -i '' "s|PLACEHOLDER_TIMESTAMP|${TIMESTAMP}|g" "${TEMP_CONFIG}"
sed -i '' "s|PLACEHOLDER_BRANCH|${CURRENT_BRANCH}|g" "${TEMP_CONFIG}"
sed -i '' "s|PLACEHOLDER_COMMIT|${CURRENT_COMMIT}|g" "${TEMP_CONFIG}"

# Run Repomix from project root
cd "${PROJECT_ROOT}"
repomix --config "${TEMP_CONFIG}"

# Clean up temp config
rm "${TEMP_CONFIG}"

# Generate diff summary if previous snapshot exists
LATEST_PREVIOUS=$(ls -t "${CONTEXT_DIR}"/*.md 2>/dev/null | grep -v "${TIMESTAMP}" | head -n 1 || echo "")

if [[ -n "${LATEST_PREVIOUS}" && -f "${LATEST_PREVIOUS}" ]]; then
    echo "" >> "${CONTEXT_FILE}"
    echo "## Changes Since Previous Snapshot" >> "${CONTEXT_FILE}"
    echo "" >> "${CONTEXT_FILE}"
    echo "Previous snapshot: $(basename "${LATEST_PREVIOUS}")" >> "${CONTEXT_FILE}"
    echo "" >> "${CONTEXT_FILE}"
    
    # Git changes summary
    if git rev-parse --git-dir > /dev/null 2>&1; then
        PREVIOUS_COMMIT=$(echo "${LATEST_PREVIOUS}" | sed -E 's/.*-([a-f0-9]+)-phase-context\.md/\1/' || echo "")
        if [[ -n "${PREVIOUS_COMMIT}" && "${PREVIOUS_COMMIT}" != "${CURRENT_COMMIT}" ]]; then
            echo "### Git Changes" >> "${CONTEXT_FILE}"
            echo "" >> "${CONTEXT_FILE}"
            echo '```bash' >> "${CONTEXT_FILE}"
            git log --oneline "${PREVIOUS_COMMIT}..HEAD" 2>/dev/null | head -20 >> "${CONTEXT_FILE}" || echo "Could not determine git changes" >> "${CONTEXT_FILE}"
            echo '```' >> "${CONTEXT_FILE}"
            echo "" >> "${CONTEXT_FILE}"
        fi
    fi
    
    # File count comparison
    CURRENT_FILES=$(wc -l < "${CONTEXT_FILE}" | tr -d ' ')
    PREVIOUS_FILES=$(wc -l < "${LATEST_PREVIOUS}" | tr -d ' ')
    FILE_DIFF=$((CURRENT_FILES - PREVIOUS_FILES))
    
    echo "### Snapshot Metrics" >> "${CONTEXT_FILE}"
    echo "- Current snapshot: ${CURRENT_FILES} lines" >> "${CONTEXT_FILE}"
    echo "- Previous snapshot: ${PREVIOUS_FILES} lines" >> "${CONTEXT_FILE}"
    echo "- Difference: ${FILE_DIFF} lines" >> "${CONTEXT_FILE}"
    echo "" >> "${CONTEXT_FILE}"
    
    echo "📊 Generated diff summary against previous snapshot"
else
    echo "" >> "${CONTEXT_FILE}"
    echo "## First Snapshot" >> "${CONTEXT_FILE}"
    echo "" >> "${CONTEXT_FILE}"
    echo "This is the first context snapshot for this project." >> "${CONTEXT_FILE}"
    echo "" >> "${CONTEXT_FILE}"
    
    echo "📍 First context snapshot generated"
fi

# Add metadata footer
echo "" >> "${CONTEXT_FILE}"
echo "---" >> "${CONTEXT_FILE}"
echo "*Generated by EAV Orchestrator context compilation system*" >> "${CONTEXT_FILE}"
echo "*For holistic orchestrator phase boundary analysis*" >> "${CONTEXT_FILE}"

echo "✅ Context snapshot compiled successfully"
echo "📄 File: ${CONTEXT_FILE}"
echo "📏 Size: $(wc -l < "${CONTEXT_FILE}" | tr -d ' ') lines"

# Cleanup old snapshots (keep last 10)
cd "${CONTEXT_DIR}"
ls -t *.md 2>/dev/null | tail -n +11 | xargs rm -f || true

echo "🧹 Cleaned up old snapshots (kept 10 most recent)"
echo "📂 Context directory: ${CONTEXT_DIR}"
